const createWorkItemsDemo = async () => {
  try {
    console.log('üöÄ Creating Work Items Demo Data...\n');
    
    const baseUrl = 'http://localhost:3000';
    const projectId = 40; // Use existing project
    
    // Sample work items data
    const workItemsData = [
      {
        workItemTitle: 'ƒê√†o m√≥ng v√† x·ª≠ l√Ω n·ªÅn',
        workItemDescription: 'ƒê√†o m√≥ng theo thi·∫øt k·∫ø v√† x·ª≠ l√Ω n·ªÅn m√≥ng cho c√¥ng tr√¨nh',
        workItemType: 'excavation',
        status: 'completed',
        priority: 'high',
        assignedTo: 'Nguy·ªÖn VƒÉn A',
        dueDate: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(), // 10 days ago
        estimatedWorkHours: 80,
        laborCount: 12,
        materials: ['x·∫ªng', 'cu·ªëc', 'xe c√∫t k√≠t', 'm√°y ƒë√†o'],
        equipment: ['m√°y ƒë√†o mini', 'xe t·∫£i'],
        notes: 'Ho√†n th√†nh ƒë√∫ng ti·∫øn ƒë·ªô, ch·∫•t l∆∞·ª£ng ƒë·∫°t y√™u c·∫ßu'
      },
      {
        workItemTitle: 'ƒê·ªï b√™ t√¥ng m√≥ng',
        workItemDescription: 'ƒê·ªï b√™ t√¥ng m√≥ng v√† c·ªôt theo ƒë√∫ng quy tr√¨nh k·ªπ thu·∫≠t',
        workItemType: 'concrete_work',
        status: 'completed',
        priority: 'high',
        assignedTo: 'Tr·∫ßn VƒÉn B',
        dueDate: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(), // 7 days ago
        estimatedWorkHours: 120,
        laborCount: 15,
        materials: ['xi mƒÉng', 'c√°t', 'ƒë√°', 'th√©p'],
        equipment: ['m√°y tr·ªôn b√™ t√¥ng', 'm√°y rung'],
        notes: 'B√™ t√¥ng ƒë·∫°t c∆∞·ªùng ƒë·ªô y√™u c·∫ßu, kh√¥ng c√≥ l·ªói k·ªπ thu·∫≠t'
      },
      {
        workItemTitle: 'X√¢y t∆∞·ªùng g·∫°ch',
        workItemDescription: 'X√¢y t∆∞·ªùng g·∫°ch v√† b√™ t√¥ng t·∫ßng 1 theo thi·∫øt k·∫ø',
        workItemType: 'masonry',
        status: 'in_progress',
        priority: 'medium',
        assignedTo: 'L√™ VƒÉn C',
        dueDate: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000).toISOString(), // 5 days from now
        estimatedWorkHours: 200,
        laborCount: 18,
        materials: ['g·∫°ch', 'xi mƒÉng', 'c√°t', 'n∆∞·ªõc'],
        equipment: ['th∆∞·ªõc', 'd√¢y d·ªçi', 'bay'],
        notes: 'Ti·∫øn ƒë·ªô 60%, ch·∫•t l∆∞·ª£ng t·ªët'
      },
      {
        workItemTitle: 'L·∫Øp ƒë·∫∑t h·ªá th·ªëng ƒëi·ªán',
        workItemDescription: 'L·∫Øp ƒë·∫∑t h·ªá th·ªëng ƒëi·ªán trong nh√† theo ti√™u chu·∫©n',
        workItemType: 'electrical',
        status: 'planned',
        priority: 'medium',
        assignedTo: 'Ph·∫°m VƒÉn D',
        dueDate: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000).toISOString(), // 10 days from now
        estimatedWorkHours: 150,
        laborCount: 8,
        materials: ['d√¢y ƒëi·ªán', '·ªï c·∫Øm', 'c√¥ng t·∫Øc', 't·ªß ƒëi·ªán'],
        equipment: ['k√¨m', 'tu·ªëc n∆° v√≠t', 'm√°y khoan'],
        notes: 'Ch·ªù ho√†n th√†nh x√¢y t∆∞·ªùng ƒë·ªÉ b·∫Øt ƒë·∫ßu'
      },
      {
        workItemTitle: 'L·∫Øp ƒë·∫∑t h·ªá th·ªëng n∆∞·ªõc',
        workItemDescription: 'L·∫Øp ƒë·∫∑t h·ªá th·ªëng c·∫•p tho√°t n∆∞·ªõc',
        workItemType: 'plumbing',
        status: 'planned',
        priority: 'medium',
        assignedTo: 'Ho√†ng VƒÉn E',
        dueDate: new Date(Date.now() + 12 * 24 * 60 * 60 * 1000).toISOString(), // 12 days from now
        estimatedWorkHours: 100,
        laborCount: 6,
        materials: ['·ªëng n∆∞·ªõc', 'van', 'b·ªìn c·∫ßu', 'lavabo'],
        equipment: ['m√°y c·∫Øt ·ªëng', 'm√°y h√†n'],
        notes: 'Chu·∫©n b·ªã v·∫≠t li·ªáu v√† thi·∫øt b·ªã'
      },
      {
        workItemTitle: 'L√°t n·ªÅn g·∫°ch',
        workItemDescription: 'L√°t n·ªÅn g·∫°ch v√† ƒë√° trang tr√≠',
        workItemType: 'finishing',
        status: 'planned',
        priority: 'low',
        assignedTo: 'V≈© VƒÉn F',
        dueDate: new Date(Date.now() + 15 * 24 * 60 * 60 * 1000).toISOString(), // 15 days from now
        estimatedWorkHours: 80,
        laborCount: 10,
        materials: ['g·∫°ch l√°t n·ªÅn', 'keo d√°n', 'v·ªØa'],
        equipment: ['m√°y c·∫Øt g·∫°ch', 'th∆∞·ªõc', 'bay'],
        notes: 'Ch·ªù ho√†n th√†nh h·ªá th·ªëng ƒëi·ªán v√† n∆∞·ªõc'
      },
      {
        workItemTitle: 'S∆°n t∆∞·ªùng v√† trang tr√≠',
        workItemDescription: 'S∆°n t∆∞·ªùng v√† trang tr√≠ n·ªôi th·∫•t',
        workItemType: 'painting',
        status: 'planned',
        priority: 'low',
        assignedTo: 'ƒê·∫∑ng VƒÉn G',
        dueDate: new Date(Date.now() + 20 * 24 * 60 * 60 * 1000).toISOString(), // 20 days from now
        estimatedWorkHours: 60,
        laborCount: 5,
        materials: ['s∆°n', 'c·ªç', 'bƒÉng d√≠nh', 'gi·∫•y nh√°m'],
        equipment: ['m√°y phun s∆°n', 'thang'],
        notes: 'Chu·∫©n b·ªã m√†u s∆°n theo thi·∫øt k·∫ø'
      },
      {
        workItemTitle: 'L·∫Øp ƒë·∫∑t c·ª≠a v√† c·ª≠a s·ªï',
        workItemDescription: 'L·∫Øp ƒë·∫∑t c·ª≠a v√† c·ª≠a s·ªï nh√¥m k√≠nh',
        workItemType: 'finishing',
        status: 'planned',
        priority: 'medium',
        assignedTo: 'B√πi VƒÉn H',
        dueDate: new Date(Date.now() + 18 * 24 * 60 * 60 * 1000).toISOString(), // 18 days from now
        estimatedWorkHours: 90,
        laborCount: 6,
        materials: ['c·ª≠a', 'c·ª≠a s·ªï', 'k√≠nh', 'kh√≥a'],
        equipment: ['m√°y khoan', 'm·ª©c', 'th∆∞·ªõc'],
        notes: 'ƒê√£ ƒë·∫∑t h√†ng c·ª≠a v√† c·ª≠a s·ªï'
      },
      {
        workItemTitle: 'L·∫Øp ƒë·∫∑t m√°i t√¥n',
        workItemDescription: 'L·∫Øp ƒë·∫∑t m√°i t√¥n v√† h·ªá th·ªëng tho√°t n∆∞·ªõc',
        workItemType: 'roofing',
        status: 'planned',
        priority: 'high',
        assignedTo: 'Ng√¥ VƒÉn I',
        dueDate: new Date(Date.now() + 25 * 24 * 60 * 60 * 1000).toISOString(), // 25 days from now
        estimatedWorkHours: 120,
        laborCount: 12,
        materials: ['t√¥n', 'x√† g·ªì', '·ªëc v√≠t', 'm√°i che'],
        equipment: ['m√°y c·∫Øt t√¥n', 'thang', 'd√¢y an to√†n'],
        notes: 'C·∫ßn th·ªùi ti·∫øt thu·∫≠n l·ª£i ƒë·ªÉ thi c√¥ng'
      },
      {
        workItemTitle: 'Ho√†n thi·ªán v√† d·ªçn d·∫πp',
        workItemDescription: 'Ho√†n thi·ªán c√°c chi ti·∫øt v√† d·ªçn d·∫πp c√¥ng tr√¨nh',
        workItemType: 'cleanup',
        status: 'planned',
        priority: 'low',
        assignedTo: 'L√Ω VƒÉn K',
        dueDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(), // 30 days from now
        estimatedWorkHours: 40,
        laborCount: 8,
        materials: ['ch·ªïi', 'n∆∞·ªõc r·ª≠a', 't√∫i r√°c'],
        equipment: ['xe ch·ªü r√°c', 'm√°y h√∫t b·ª•i'],
        notes: 'C√¥ng vi·ªác cu·ªëi c√πng tr∆∞·ªõc khi b√†n giao'
      },
      {
        workItemTitle: 'Ki·ªÉm tra ch·∫•t l∆∞·ª£ng',
        workItemDescription: 'Ki·ªÉm tra ch·∫•t l∆∞·ª£ng v√† nghi·ªám thu c√¥ng tr√¨nh',
        workItemType: 'inspection',
        status: 'planned',
        priority: 'high',
        assignedTo: 'Cao VƒÉn L',
        dueDate: new Date(Date.now() + 32 * 24 * 60 * 60 * 1000).toISOString(), // 32 days from now
        estimatedWorkHours: 20,
        laborCount: 4,
        materials: ['th∆∞·ªõc ƒëo', 'm√°y ƒëo', 'gi·∫•y nghi·ªám thu'],
        equipment: ['m√°y ƒëo ƒë·ªô ·∫©m', 'm√°y ƒëo ƒë·ªô nghi√™ng'],
        notes: 'Ki·ªÉm tra to√†n b·ªô c√¥ng tr√¨nh theo ti√™u chu·∫©n'
      },
      {
        workItemTitle: 'B√†n giao c√¥ng tr√¨nh',
        workItemDescription: 'B√†n giao c√¥ng tr√¨nh cho ch·ªß ƒë·∫ßu t∆∞',
        workItemType: 'other',
        status: 'planned',
        priority: 'urgent',
        assignedTo: 'Tr∆∞·ªüng c√¥ng tr√¨nh',
        dueDate: new Date(Date.now() + 35 * 24 * 60 * 60 * 1000).toISOString(), // 35 days from now
        estimatedWorkHours: 10,
        laborCount: 2,
        materials: ['h·ªì s∆° b√†n giao', 'ch√¨a kh√≥a'],
        equipment: ['m√°y t√≠nh', 'm√°y in'],
        notes: 'Chu·∫©n b·ªã h·ªì s∆° b√†n giao ƒë·∫ßy ƒë·ªß'
      }
    ];

    const createdWorkItems = [];

    // Create work items
    console.log('üîß Creating Work Items...');
    for (let i = 0; i < workItemsData.length; i++) {
      const workItem = workItemsData[i];
      console.log(`Creating work item ${i + 1}/12: ${workItem.workItemTitle}`);
      
      const response = await fetch(`${baseUrl}/api/projects/${projectId}/work-items`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'x-organization-id': 'org_demo_1',
          'x-user-id': 'test-user-123'
        },
        body: JSON.stringify(workItem)
      });

      if (response.ok) {
        const data = await response.json();
        const createdWorkItem = data.workItem || data;
        createdWorkItems.push(createdWorkItem);
        console.log(`‚úÖ Created work item: ${createdWorkItem.workItemTitle} (ID: ${createdWorkItem.id})`);
      } else {
        const error = await response.text();
        console.log(`‚ùå Failed to create work item ${i + 1}: ${error}`);
      }
    }

    console.log(`\nüìã Created ${createdWorkItems.length} work items\n`);

    // Summary
    console.log('üéâ Work Items Demo Data Creation Completed!');
    console.log('\nüìä Summary:');
    console.log(`‚úÖ Work Items: ${createdWorkItems.length}/12`);
    
    console.log('\nüìã Work Items Created:');
    createdWorkItems.forEach((workItem, index) => {
      console.log(`${index + 1}. ${workItem.workItemTitle} (ID: ${workItem.id}) - ${workItem.status}`);
    });

    console.log('\nüîß Next Steps:');
    console.log('1. Visit /dashboard/projects to see all projects');
    console.log('2. Click on project 40 to see work items');
    console.log('3. Test the work items listing page');
    console.log('4. Test creating, editing, and viewing work items');
    console.log('5. Test work item detail pages');

  } catch (error) {
    console.error('üí• Error creating work items demo data:', error);
  }
};

createWorkItemsDemo();
